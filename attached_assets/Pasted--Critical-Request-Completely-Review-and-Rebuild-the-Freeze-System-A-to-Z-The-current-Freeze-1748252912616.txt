‚ö†Ô∏è Critical Request: Completely Review and Rebuild the Freeze System (A to Z)

The current "Freeze Bill" functionality is inconsistent and unreliable. Despite multiple fixes, the freeze state is NOT functioning as expected in real-world use.

Please follow these instructions to fully reimplement the Freeze system from scratch with robust, persistent logic.

---

### üîç Core Purpose of Freeze System:

- When a bill is **frozen**, no data should be allowed to change ‚Äî this ensures **financial and inventory data integrity**
- Freeze status should persist across sessions, reloads, and even logouts
- Users must be able to **toggle** between "Frozen" and "Unfrozen" states manually

---

### ‚úÖ Required Functionality (Full List):

1. **Persistent Freeze Metadata**
   - The freeze status must be stored in the database, inside the purchase bill metadata (e.g., `isFrozen: true`)
   - On every component load (edit/view), check this metadata and lock or unlock accordingly

2. **Form Behavior When Frozen**
   - All inputs must be fully disabled or blocked (e.g., item quantities, vendor dropdowns, payment inputs)
   - "Add Item" and "Remove Item" buttons must be disabled
   - The "Save" button must be hidden or replaced with a clearly disabled version labeled:  
     `üßä Bill Frozen ‚Äì Cannot Save`
   - Form fields should have reduced opacity and a tooltip:  
     `"This bill is frozen. Unfreeze to make changes."`

3. **Unfreeze Capability**
   - When a bill is frozen, a visible **"Unfreeze" button** must be shown
   - Clicking this should:
     - Set `isFrozen: false` in the metadata
     - Re-enable all form inputs and actions
     - Reactivate the "Save" button
     - Display confirmation toast: `"Bill has been unfrozen. You may now edit and save."`

4. **Freeze Button Behavior**
   - The "Freeze Bill" button should:
     - Immediately save `isFrozen: true` in metadata
     - Lock the form as described
     - Replace itself with an "Unfreeze" button
     - Show confirmation toast: `"Bill is now frozen. No changes are allowed."`

5. **Reload and Session Handling**
   - After page reload or login, the bill must respect the saved freeze state
   - No field should become editable if `isFrozen: true`
   - Component must fetch and apply freeze state on initial load using `useEffect` or equivalent

6. **Safe Guard in Code**
   - All save handlers (`onSubmit`) and item update functions (`addItem`, `removeItem`, etc.) must check for `isFrozen` and abort if true
   - Console warnings/logs should show "Blocked action due to frozen bill" for debugging

---

### üö´ Current Issues Observed:

- Freeze only works until page reload ‚Äì metadata not reliably loaded or applied
- No Unfreeze button is shown even when bill is frozen
- Fields become editable even if freeze UI appears active
- System behavior is inconsistent across edit/view/list modes

---

### üìå Summary:

Please discard all previous partial fixes and completely **rebuild** the freeze system according to the above checklist. This feature must behave consistently across all scenarios and ensure data cannot be changed unless explicitly unfrozen.

This is a **critical accounting and audit feature** ‚Äî full reliability is mandatory.
