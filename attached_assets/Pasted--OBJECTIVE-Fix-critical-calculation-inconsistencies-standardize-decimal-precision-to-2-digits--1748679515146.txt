üéØ OBJECTIVE:
Fix critical calculation inconsistencies, standardize decimal precision to 2 digits, and refine UI/UX for a financial-accounting-focused application‚Äîparticularly in the Purchase Bill module.

---

### üö® CRITICAL ISSUES TO FIX:

1. **Inconsistent Account Balance Display:**
   - An account named ‚ÄúDBMB‚Äù was created under the **Cash & Bank** category with an initial balance of **$120.00**.
   - However:
     - On the **Accounts Page**, it shows as **$1200.00**
     - On the **Purchase Bill (Pay From Account)** dropdown, it shows as **$12.00**
   - This indicates major inconsistencies likely due to incorrect **currency unit conversion (cents vs dollars)** or improper parsing.
   - üõ†Ô∏è Fix: Ensure all balances use **a consistent unit (USD)** throughout all pages, and convert only when needed (e.g., storing in cents, displaying in dollars).

2. **Incorrect Precision in 'Make Full Payment':**
   - When clicking ‚ÄúMake Full Payment‚Äù:
     - If Total = `$305.31`, the Payment Made field shows `305.30609`
     - This precision mismatch causes inaccurate payment status (e.g., ‚ÄúPaid‚Äù when it should be partial)
   - ‚úÖ Required Fix:
     - All financial figures must display and operate on **two decimal places only**.
     - Never show or store fractional values beyond `.00`‚Äì`.99`.

   ```js
   // Example enforcement (for all monetary outputs)
   const formattedAmount = parseFloat(amount).toFixed(2);

PURCHASE BILL UI/UX IMPROVEMENTS:
Simplify Top Section of Purchase Bill Editor:


Remove the top "Pay From Account" section ‚Äî it‚Äôs already available in the lower payment section.


Move Bill Number next to the Vendor field (same row).


Place Bill Date and Due Date side by side in the second row.


The current third row (status) can be removed, since the status is already shown above the form.


The ‚ÄúAdd More Payment‚Äù button is not needed ‚Äî remove it.


Standardize Status Placement:


Status should appear only once, ideally above the main form.


Ensure it does not duplicate in multiple places (especially in edit mode).


Payment Account Dropdown:


The ‚ÄúPay From Account‚Äù dropdown should list all accounts under the Cash & Bank category.


Each entry should display the account name along with its current runtime balance, formatted like:


DBMB ‚Äî $120.00
bKash ‚Äî $97.50
Premium Bank ‚Äî $560.32


Runtime Balance Accuracy:


Balances shown next to accounts must reflect real-time data from:


Initial Balance


Purchase Bills


Sales Invoices


Expense & Income Vouchers


Runtime balance should be used to:


Validate sufficient funds before allowing a payment


Show live balance to users for decision making



üìå GENERAL FINANCIAL LOGIC & DATA HYGIENE:
Decimal Handling Across Entire System:


All amount fields (Total, Payment Made, Discounts, Balances, etc.) must:


Accept and display up to two decimal digits only


Reject or round excess digits properly


Critical for financial accuracy and user trust




üèÅ FINAL NOTES:
This is a precision-sensitive, financial-grade application ‚Äî accounting logic must be mathematically flawless.


Refrain from unnecessary UX changes unless functionally justified.


Ensure full validation, consistent formatting, and no rounding errors.


All modules must reflect synchronized and trustworthy figures to avoid user confusion or data mismatch.