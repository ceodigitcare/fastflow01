üõ†Ô∏è Prompt to Fix Image Upload Handling & Blob URL Issue in PWA Settings
Issue Summary:
The PWA settings form still shows a blob: URL after uploading an icon. When attempting to update the settings, it fails with the message:
Failed to update PWA settings. Please try again.

Additionally:

The uploaded icon shows a blob URL (blob:https://...) instead of a static path or file URL, which cannot be saved in the database.

The UI does not allow removing the current icon or replacing it smoothly via drag-and-drop.

No valid static URL is stored or previewed after successful upload.

‚úÖ Expected Behavior:
When a user uploads an icon (via drag-and-drop or file input), it should be stored on the server or in static hosting (e.g., /uploads/icons/app-512.png).

The input field should display a static image URL, not a blob.

There should be a "Remove Icon" option to clear the currently selected image and allow replacement.

After uploading, the new icon should appear in the manifest and database correctly.

üîç Developer Action Checklist:
Blob URL Handling:

Do not store or use blob: URLs in the form.

After uploading, replace the blob preview with the actual uploaded file URL returned by the server.

Upload & Preview Logic:

On successful image upload, replace the preview image and hidden input with a proper file path (e.g., https://yourapp.com/static/icons/icon-512.png).

Prevent form submission until the image has been fully uploaded and resolved with a valid static URL.

Storage Endpoint:

Make sure the uploaded image is stored in a publicly accessible static directory or file server.

Return the full URL from the upload API response and update the form state accordingly.

UI/UX Improvement:

Add a "Remove Icon" button to clear the current selection.

Allow re-uploading a new file after removing or overwriting the old one.

Database Save:

Ensure the database only stores static URLs and not temporary or blob data.

Add validation to reject any value starting with blob: during save.

‚úîÔ∏è Final Goal:
Ensure that after image upload:

The icon displays correctly in the UI,

The form saves successfully with a valid static URL,

The manifest and install behavior continue to work without interruption.