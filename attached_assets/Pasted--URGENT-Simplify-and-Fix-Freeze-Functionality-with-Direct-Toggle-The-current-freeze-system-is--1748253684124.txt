🚨 URGENT: Simplify and Fix Freeze Functionality with Direct Toggle

The current freeze system is still not working reliably. Please do a full double-check and simplify the implementation as follows:

---

### ✅ Replace Button with Toggle Switch:

- Completely **replace** the current "Freeze Bill" and "Unfreeze" buttons with a **single toggle switch** UI component.
- Label the switch clearly:  
  - When OFF: `🔓 Editable`  
  - When ON: `🧊 Frozen`
- This switch should:
  - **Update `isFrozen`** status in the database immediately upon toggle
  - **Trigger re-render** of the form to reflect the correct locked/unlocked state
  - **Have NO warning/toast confirmations** — toggle should be instant and silent

---

### 🔐 Behavior When Frozen (Switch ON):

- All form fields must be disabled (read-only)
- Save button must be disabled or replaced with: `🧊 Bill is frozen - Cannot save`
- Add/Remove item functions must not trigger
- Visual indicator: form should show reduced opacity
- Freeze state must persist across:
  - Page reload
  - Logout/login
  - Navigation back to the bill

---

### 🔓 Behavior When Unfrozen (Switch OFF):

- All fields become editable again
- Save button reactivates
- Add/Remove item functions work normally
- No alerts or toast messages required

---

### 🛠️ Additional Instructions:

- Ensure the `isFrozen` metadata is **fetched on component mount** and used to initialize the toggle switch and field locking.
- Double-check that the toggle value is always **accurately reflecting the real database value** — no UI mismatch.
- Make sure the form respects the frozen state fully — no accidental edits or saves.
- The switch should **always be visible** at the top of the form.

---

✅ Summary:

This is the final simplified version of freeze/unfreeze. Just implement a persistent toggle switch that controls a true `isFrozen` state, without toasts, buttons, or unnecessary logic. The toggle alone should control everything.
